// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace WebBankSP.Test
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MyHash")]
    [NUnit.Framework.CategoryAttribute("MyHash")]
    public partial class MyHashFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MyHash.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MyHash", "\tIn order to avoid password been exposure to others\r\n\tAs an Authentication Object" +
                    "\r\n\tI want to hash the input password", ProgrammingLanguage.CSharp, new string[] {
                        "MyHash"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("input password \"Irene\", the hash result should be \"S2EQGhNLvF9Qh2QZMmB9wo2Ezuif8r" +
            "mYCTaGUEKqdMz+w5SHZXSreKazP0QuUG67cBMFbnDmtwOoKVvk7IWzVQ==\"")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void InputPasswordIreneTheHashResultShouldBeS2EQGhNLvF9Qh2QZMmB9Wo2Ezuif8RmYCTaGUEKqdMzW5SHZXSreKazP0QuUG67CBMFbnDmtwOoKVvk7IWzVQ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("input password \"Irene\", the hash result should be \"S2EQGhNLvF9Qh2QZMmB9wo2Ezuif8r" +
                    "mYCTaGUEKqdMz+w5SHZXSreKazP0QuUG67cBMFbnDmtwOoKVvk7IWzVQ==\"", new string[] {
                        "mytag"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("\"Irene\" as a input password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("call the GetHash method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("the hashed result should be \"S2EQGhNLvF9Qh2QZMmB9wo2Ezuif8rmYCTaGUEKqdMz+w5SHZXSr" +
                    "eKazP0QuUG67cBMFbnDmtwOoKVvk7IWzVQ==\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("input password \"Yiqun\", the hash result should be \"ZQwWPgZCp528nogmOxnsSsVZPtmPl6" +
            "WCmOk6WG2WD3cfapxHSAml1MFdrD6CRVgs7gNDmHkAjUQmWgT0Dmr0ng==\"")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void InputPasswordYiqunTheHashResultShouldBeZQwWPgZCp528NogmOxnsSsVZPtmPl6WCmOk6WG2WD3CfapxHSAml1MFdrD6CRVgs7GNDmHkAjUQmWgT0Dmr0Ng()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("input password \"Yiqun\", the hash result should be \"ZQwWPgZCp528nogmOxnsSsVZPtmPl6" +
                    "WCmOk6WG2WD3cfapxHSAml1MFdrD6CRVgs7gNDmHkAjUQmWgT0Dmr0ng==\"", new string[] {
                        "mytag"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("\"Yiqun\" as a input password", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.When("call the GetHash method", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("the hashed result should be \"ZQwWPgZCp528nogmOxnsSsVZPtmPl6WCmOk6WG2WD3cfapxHSAml" +
                    "1MFdrD6CRVgs7gNDmHkAjUQmWgT0Dmr0ng==\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
